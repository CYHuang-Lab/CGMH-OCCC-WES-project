p.adjust(c(0.3829, 0.2657, 0.01808), method = "BH")
Sig.act <- lapply(dir.path, function(x){
ID <- str_extract(x, pattern = "ASC.*|D11.*|DF.*|S18.*|T22.*")
tmp <- list.files(x, pattern = "inferred.exposure.csv", full.names = T) %>% read.csv()
colnames(tmp)[1] <- "SBS"
mat.zero <- data.frame(SBS = setdiff(SBS.all, tmp$SBS), 0)
colnames(mat.zero)[2] <- colnames(tmp)[2]
tmp <- rbind(tmp, mat.zero)
rownames(tmp) <- tmp[,1]
return(tmp[SBS.all, 2, drop=F])
})
Sig.act <- do.call("cbind", Sig.act)
Sig.act <- Sig.act[rowSums(Sig.act)>0,]
dir.path <- list.dirs(path = "mutsig/sig_attribution/", full.names = T) %>%
grep(pattern = "ASC|D11|DF|S18|T22", value = T)
SBS.all <- unlist(sig_universe) %>% unique()
SBS.all <- c(SBS.all, "SBS22")
Sig.act <- lapply(dir.path, function(x){
ID <- str_extract(x, pattern = "ASC.*|D11.*|DF.*|S18.*|T22.*")
tmp <- list.files(x, pattern = "inferred.exposure.csv", full.names = T) %>% read.csv()
colnames(tmp)[1] <- "SBS"
mat.zero <- data.frame(SBS = setdiff(SBS.all, tmp$SBS), 0)
colnames(mat.zero)[2] <- colnames(tmp)[2]
tmp <- rbind(tmp, mat.zero)
rownames(tmp) <- tmp[,1]
return(tmp[SBS.all, 2, drop=F])
})
Sig.act <- do.call("cbind", Sig.act)
Sig.act <- Sig.act[rowSums(Sig.act)>0,]
45/406
406-45
152/298
fisher.test(matrix(c(45,361,152,146)))
fisher.test(matrix(c(45,361,152,146),nrow=2))
71/406
66/298
311/406
111/298
prop.test(x = matrix(c(311,406,111,298),nrow=2,byrow=T))
prop.test(x = matrix(c(45,406,152,298),nrow=2,byrow=T))
PCAWG7::CancerTypes()
mSigAct::ExposureProportions(mutation.type = "SBS96", cancer.type = "Head-SCC")
setwd("../Documents/GitHub/CGMH-OCCC-WES-project/")
OCCC.clinical <- read.csv("./CGMH-OCCC-table.csv")
View(OCCC.clinical)
OCCC.clinical$Stage
OCCC.clinical <- mutate(OCCC.clinical,
stage.group = ifelse(Stage %in% c("I","IA","IB","IC","II","IIA","IIB"),
"Early stage","Late stage")
)
# Install dependency packages and load in data
library(dplyr)
OCCC.clinical <- mutate(OCCC.clinical,
stage.group = ifelse(Stage %in% c("I","IA","IB","IC","II","IIA","IIB"),
"Early stage","Late stage")
)
rownames(OCCC.clinical) <- OCCC.clinical$ID
colnames(OCCC.clinical)
OCCC.clinical$ARID1A
OCCC.clinical$TERT
plot.gene.OS <- function(gene, plot.surv = c(TRUE, FALSE)){
tmp <- OCCC.clinical[,c("ID","OS.month","OS.event",gene)]
colnames(tmp)[4] <- "gene"
if(gene == "TERT"){
tmp$gene <- factor(tmp$gene, levels = c("Wild type","upstream","UTR5"))
pal.mut <- c("gray50","orange","pink")
} else{
tmp$gene <- factor(ifelse(tmp$gene == "Wild type", "Wild type", "Mutant"),
levels = c("Wild type","Mutant"))
pal.mut <- c("gray50","maroon1")
}
y <- coxph(formula = Surv(OS.month, OS.event == "1") ~ gene, data = tmp)
z <- summary(y)
HR <- round(z$coefficients[2],2)
CI.lower <- round(z$conf.int[3],2)
CI.upper <- round(z$conf.int[4],2)
p.value <- ifelse(z$coefficients[5]<0.0001, z$coefficients[5], round(z$coefficients[5],4))
if(isTRUE(plot.surv)){
p <- survminer::ggsurvplot(
data = tmp, fit = survfit(Surv(Surv_time, Surv_status == "1") ~ gene.status, data = tmp),
pval = T, surv.median.line = "hv", size = 0.75,
legend = c(0.8, 0.3), legend.title = paste(gene.status, outcome),
font.legend = list(size = 10, color = "black"),
legend.labs = paste0(names(table(tmp$gene.status)), ", n = ", table(tmp$gene.status)),
palette = pal.mut, risk.table = F, xlab = "", ylab = "", break.x.by = 12)
return(p)
} else {
HR.table <- data.frame(
Gene = gene, Outcome = outcome, MT.n = table(tmp$gene.status)["Mutant"], WT.n = table(tmp$gene.status)["Wild type"],
HR = HR, CI.lower = CI.lower, CI.upper = CI.upper, p.value = z$coefficients[5])
return(HR.table)
}
}
plot.gene.OS(gene = "TERT", plot.surv = T)
library(survival)
library(survminer)
plot.gene.OS(gene = "TERT", plot.surv = T)
plot.gene.OS <- function(gene, plot.surv = c(TRUE, FALSE)){
tmp <- OCCC.clinical[,c("ID","OS.month","OS.event",gene)]
colnames(tmp)[4] <- "gene"
if(gene == "TERT"){
tmp$gene <- factor(tmp$gene, levels = c("Wild type","upstream","UTR5"))
pal.mut <- c("gray50","orange","pink")
} else{
tmp$gene <- factor(ifelse(tmp$gene == "Wild type", "Wild type", "Mutant"),
levels = c("Wild type","Mutant"))
pal.mut <- c("gray50","maroon1")
}
y <- coxph(formula = Surv(OS.month, OS.event == "1") ~ gene, data = tmp)
z <- summary(y)
HR <- round(z$coefficients[2],2)
CI.lower <- round(z$conf.int[3],2)
CI.upper <- round(z$conf.int[4],2)
p.value <- ifelse(z$coefficients[5]<0.0001, z$coefficients[5], round(z$coefficients[5],4))
if(isTRUE(plot.surv)){
p <- survminer::ggsurvplot(
data = tmp, fit = survfit(Surv(OS.month, OS.event == "1") ~ gene, data = tmp),
pval = T, surv.median.line = "hv", size = 0.75,
legend = c(0.8, 0.3), legend.title = paste(gene, outcome),
font.legend = list(size = 10, color = "black"),
legend.labs = paste0(names(table(tmp$gene)), ", n = ", table(tmp$gene)),
palette = pal.mut, risk.table = F, xlab = "", ylab = "", break.x.by = 12)
return(p)
} else {
HR.table <- data.frame(
Gene = gene, Outcome = outcome, MT.n = table(tmp$gene.status)["Mutant"], WT.n = table(tmp$gene.status)["Wild type"],
HR = HR, CI.lower = CI.lower, CI.upper = CI.upper, p.value = z$coefficients[5])
return(HR.table)
}
}
plot.gene.OS(gene = "TERT", plot.surv = T)
plot.gene.OS <- function(gene, plot.surv = c(TRUE, FALSE)){
tmp <- OCCC.clinical[,c("ID","OS.month","OS.event",gene)]
colnames(tmp)[4] <- "gene"
if(gene == "TERT"){
tmp$gene <- factor(tmp$gene, levels = c("Wild type","upstream","UTR5"))
pal.mut <- c("gray50","orange","pink")
} else{
tmp$gene <- factor(ifelse(tmp$gene == "Wild type", "Wild type", "Mutant"),
levels = c("Wild type","Mutant"))
pal.mut <- c("gray50","maroon1")
}
y <- coxph(formula = Surv(OS.month, OS.event == "1") ~ gene, data = tmp)
z <- summary(y)
HR <- round(z$coefficients[2],2)
CI.lower <- round(z$conf.int[3],2)
CI.upper <- round(z$conf.int[4],2)
p.value <- ifelse(z$coefficients[5]<0.0001, z$coefficients[5], round(z$coefficients[5],4))
if(isTRUE(plot.surv)){
p <- survminer::ggsurvplot(
data = tmp, fit = survfit(Surv(OS.month, OS.event == "1") ~ gene, data = tmp),
pval = T, surv.median.line = "hv", size = 0.75,
legend = c(0.8, 0.3), legend.title = paste(gene, outcome),
font.legend = list(size = 10, color = "black"),
legend.labs = paste0(names(table(tmp$gene)), ", n = ", table(tmp$gene)),
palette = pal.mut, risk.table = F, xlab = "", ylab = "", break.x.by = 12)
return(p)
} else {
HR.table <- data.frame(
Gene = gene, Outcome = "OS", MT.n = table(tmp$gene.status)["Mutant"],
WT.n = table(tmp$gene.status)["Wild type"],
HR = HR, CI.lower = CI.lower, CI.upper = CI.upper, p.value = z$coefficients[5])
return(HR.table)
}
}
plot.gene.OS(gene = "TERT", plot.surv = T)
plot.gene.OS <- function(gene, plot.surv = c(TRUE, FALSE)){
tmp <- OCCC.clinical[,c("ID","OS.month","OS.event",gene)]
colnames(tmp)[4] <- "gene"
if(gene == "TERT"){
tmp$gene <- factor(tmp$gene, levels = c("Wild type","upstream","UTR5"))
pal.mut <- c("gray50","orange","pink")
} else{
tmp$gene <- factor(ifelse(tmp$gene == "Wild type", "Wild type", "Mutant"),
levels = c("Wild type","Mutant"))
pal.mut <- c("gray50","maroon1")
}
y <- coxph(formula = Surv(OS.month, OS.event == "1") ~ gene, data = tmp)
z <- summary(y)
HR <- round(z$coefficients[2],2)
CI.lower <- round(z$conf.int[3],2)
CI.upper <- round(z$conf.int[4],2)
p.value <- ifelse(z$coefficients[5]<0.0001, z$coefficients[5], round(z$coefficients[5],4))
if(isTRUE(plot.surv)){
p <- survminer::ggsurvplot(
data = tmp, fit = survfit(Surv(OS.month, OS.event == "1") ~ gene, data = tmp),
pval = T, surv.median.line = "hv", size = 0.75,
legend = c(0.8, 0.3), legend.title = gene,
font.legend = list(size = 10, color = "black"),
legend.labs = paste0(names(table(tmp$gene)), ", n = ", table(tmp$gene)),
palette = pal.mut, risk.table = F, xlab = "", ylab = "", break.x.by = 12)
return(p)
} else {
HR.table <- data.frame(
Gene = gene, Outcome = "OS", MT.n = table(tmp$gene.status)["Mutant"],
WT.n = table(tmp$gene.status)["Wild type"],
HR = HR, CI.lower = CI.lower, CI.upper = CI.upper, p.value = z$coefficients[5])
return(HR.table)
}
}
plot.gene.OS(gene = "TERT", plot.surv = T)
plot.gene.OS(gene = "TERT", plot.surv = F)
plot.gene.OS <- function(gene, plot.surv = c(TRUE, FALSE)){
tmp <- OCCC.clinical[,c("ID","OS.month","OS.event",gene)]
colnames(tmp)[4] <- "gene"
if(gene == "TERT"){
tmp$gene <- factor(tmp$gene, levels = c("Wild type","upstream","UTR5"))
pal.mut <- c("gray50","orange","pink")
} else{
tmp$gene <- factor(ifelse(tmp$gene == "Wild type", "Wild type", "Mutant"),
levels = c("Wild type","Mutant"))
pal.mut <- c("gray50","maroon1")
}
y <- coxph(formula = Surv(OS.month, OS.event == "1") ~ gene, data = tmp)
z <- summary(y)
HR <- round(z$coefficients[2],2)
CI.lower <- round(z$conf.int[3],2)
CI.upper <- round(z$conf.int[4],2)
p.value <- ifelse(z$coefficients[5]<0.0001, z$coefficients[5], round(z$coefficients[5],4))
if(isTRUE(plot.surv)){
p <- survminer::ggsurvplot(
data = tmp, fit = survfit(Surv(OS.month, OS.event == "1") ~ gene, data = tmp),
pval = T, surv.median.line = "hv", size = 0.75,
legend = c(0.8, 0.3), legend.title = gene,
font.legend = list(size = 10, color = "black"),
legend.labs = paste0(names(table(tmp$gene)), ", n = ", table(tmp$gene)),
palette = pal.mut, risk.table = F, xlab = "", ylab = "", break.x.by = 12)
return(p)
} else {
HR.table <- data.frame(
Gene = gene, Outcome = "OS",
MT.n = table(tmp$gene)["Mutant"],
WT.n = table(tmp$gene)["Wild type"],
HR = HR, CI.lower = CI.lower, CI.upper = CI.upper, p.value = z$coefficients[5])
return(HR.table)
}
}
plot.gene.OS(gene = "TERT", plot.surv = T)
plot.gene.OS(gene = "TERT", plot.surv = F)
plot.gene.OS(gene = "PIK3CA", plot.surv = F)
plot.gene.OS(gene = "PIK3CA", plot.surv = T)
table(OCCC.clinical$TERT)
y <- coxph(formula = Surv(OS.month, OS.event == "1") ~ TERT, data = OCCC.clinical)
y$coefficients
y$coefficients[2]
plot.gene.OS <- function(gene, plot.surv = c(TRUE, FALSE)){
browser()
tmp <- OCCC.clinical[,c("ID","OS.month","OS.event",gene)]
colnames(tmp)[4] <- "gene"
if(gene == "TERT"){
tmp$gene <- factor(tmp$gene, levels = c("Wild type","upstream","UTR5"))
pal.mut <- c("gray50","orange","pink")
} else{
tmp$gene <- factor(ifelse(tmp$gene == "Wild type", "Wild type", "Mutant"),
levels = c("Wild type","Mutant"))
pal.mut <- c("gray50","maroon1")
}
y <- coxph(formula = Surv(OS.month, OS.event == "1") ~ gene, data = tmp)
z <- summary(y)
HR <- round(z$coefficients[2],2)
CI.lower <- round(z$conf.int[3],2)
CI.upper <- round(z$conf.int[4],2)
p.value <- ifelse(z$coefficients[5]<0.0001, z$coefficients[5], round(z$coefficients[5],4))
if(isTRUE(plot.surv)){
p <- survminer::ggsurvplot(
data = tmp, fit = survfit(Surv(OS.month, OS.event == "1") ~ gene, data = tmp),
pval = T, surv.median.line = "hv", size = 0.75,
legend = c(0.8, 0.3), legend.title = gene,
font.legend = list(size = 10, color = "black"),
legend.labs = paste0(names(table(tmp$gene)), ", n = ", table(tmp$gene)),
palette = pal.mut, risk.table = F, xlab = "", ylab = "", break.x.by = 12)
return(p)
} else if(!isTRUE(plot.surv) & gene == "TERT"){
HR.table <- data.frame(
Gene = c("TERT.promoter","TERT.UTR5"), Outcome = "OS",
MT.n = table(tmp$gene)[c("upstream","UTR5")],
WT.n = table(tmp$gene)["Wild type"],
HR = HR, CI.lower = CI.lower, CI.upper = CI.upper, p.value = z$coefficients[5])
return(HR.table)
} else {
HR.table <- data.frame(
Gene = gene, Outcome = "OS",
MT.n = table(tmp$gene)["Mutant"],
WT.n = table(tmp$gene)["Wild type"],
HR = HR, CI.lower = CI.lower, CI.upper = CI.upper, p.value = z$coefficients[5])
}
}
plot.gene.OS(gene = "ARID1A", plot.surv = F)
z$coefficients
y$coefficients
z <- summary(y)
z$coefficients
z$coefficients[2]
z$coefficients[,2]
z$coefficients[,3]
z$conf.int
plot.gene.OS <- function(gene, plot.surv = c(TRUE, FALSE)){
#browser()
tmp <- OCCC.clinical[,c("ID","OS.month","OS.event",gene)]
colnames(tmp)[4] <- "gene"
if(gene == "TERT"){
tmp$gene <- factor(tmp$gene, levels = c("Wild type","upstream","UTR5"))
pal.mut <- c("gray50","orange","pink")
} else{
tmp$gene <- factor(ifelse(tmp$gene == "Wild type", "Wild type", "Mutant"),
levels = c("Wild type","Mutant"))
pal.mut <- c("gray50","maroon1")
}
y <- coxph(formula = Surv(OS.month, OS.event == "1") ~ gene, data = tmp)
z <- summary(y)
HR <- round(z$coefficients[2],2)
CI.lower <- round(z$conf.int[3],2)
CI.upper <- round(z$conf.int[4],2)
p.value <- ifelse(z$coefficients[5]<0.0001, z$coefficients[5], round(z$coefficients[5],4))
if(isTRUE(plot.surv)){
p <- survminer::ggsurvplot(
data = tmp, fit = survfit(Surv(OS.month, OS.event == "1") ~ gene, data = tmp),
pval = T, surv.median.line = "hv", size = 0.75,
legend = c(0.8, 0.3), legend.title = gene,
font.legend = list(size = 10, color = "black"),
legend.labs = paste0(names(table(tmp$gene)), ", n = ", table(tmp$gene)),
palette = pal.mut, risk.table = F, xlab = "", ylab = "", break.x.by = 12)
return(p)
} else if(!isTRUE(plot.surv) & gene == "TERT"){
HR.table <- data.frame(
Gene = c("TERT.promoter","TERT.UTR5"), Outcome = "OS",
MT.n = table(tmp$gene)[c("upstream","UTR5")],
WT.n = table(tmp$gene)["Wild type"],
HR = round(z$coefficients[,2], 2),
CI.lower = round(z$conf.int[,3],2), CI.upper = round(z$conf.int[,4],2),
p.value = z$coefficients[,5])
return(HR.table)
} else {
HR.table <- data.frame(
Gene = gene, Outcome = "OS",
MT.n = table(tmp$gene)["Mutant"],
WT.n = table(tmp$gene)["Wild type"],
HR = HR, CI.lower = CI.lower, CI.upper = CI.upper, p.value = z$coefficients[5])
}
}
plot.gene.OS(gene = "ARID1A", plot.surv = F)
plot.gene.OS <- function(gene, plot.surv = c(TRUE, FALSE)){
#browser()
tmp <- OCCC.clinical[,c("ID","OS.month","OS.event",gene)]
colnames(tmp)[4] <- "gene"
if(gene == "TERT"){
tmp$gene <- factor(tmp$gene, levels = c("Wild type","upstream","UTR5"))
pal.mut <- c("gray50","orange","pink")
} else{
tmp$gene <- factor(ifelse(tmp$gene == "Wild type", "Wild type", "Mutant"),
levels = c("Wild type","Mutant"))
pal.mut <- c("gray50","maroon1")
}
y <- coxph(formula = Surv(OS.month, OS.event == "1") ~ gene, data = tmp)
z <- summary(y)
HR <- round(z$coefficients[2],2)
CI.lower <- round(z$conf.int[3],2)
CI.upper <- round(z$conf.int[4],2)
p.value <- ifelse(z$coefficients[5]<0.0001, z$coefficients[5], round(z$coefficients[5],4))
if(isTRUE(plot.surv)){
p <- survminer::ggsurvplot(
data = tmp, fit = survfit(Surv(OS.month, OS.event == "1") ~ gene, data = tmp),
pval = T, surv.median.line = "hv", size = 0.75,
legend = c(0.8, 0.3), legend.title = gene,
font.legend = list(size = 10, color = "black"),
legend.labs = paste0(names(table(tmp$gene)), ", n = ", table(tmp$gene)),
palette = pal.mut, risk.table = F, xlab = "", ylab = "", break.x.by = 12)
return(p)
} else if(!isTRUE(plot.surv) & gene == "TERT"){
HR.table <- data.frame(
Gene = c("TERT.promoter","TERT.UTR5"), Outcome = "OS",
MT.n = table(tmp$gene)[c("upstream","UTR5")],
WT.n = table(tmp$gene)["Wild type"],
HR = round(z$coefficients[,2], 2),
CI.lower = round(z$conf.int[,3],2), CI.upper = round(z$conf.int[,4],2),
p.value = z$coefficients[,5])
} else {
HR.table <- data.frame(
Gene = gene, Outcome = "OS",
MT.n = table(tmp$gene)["Mutant"],
WT.n = table(tmp$gene)["Wild type"],
HR = HR, CI.lower = CI.lower, CI.upper = CI.upper, p.value = z$coefficients[5])
}
return(HR.table)
}
plot.gene.OS(gene = "ARID1A", plot.surv = F)
plot.gene.OS(gene = "TERT", plot.surv = F)
plot.gene.OS <- function(gene, plot.surv = c(TRUE, FALSE)){
#browser()
tmp <- OCCC.clinical[,c("ID","OS.month","OS.event",gene)]
colnames(tmp)[4] <- "gene"
if(gene == "TERT"){
tmp$gene <- factor(tmp$gene, levels = c("Wild type","upstream","UTR5"))
pal.mut <- c("gray50","orange","pink")
} else{
tmp$gene <- factor(ifelse(tmp$gene == "Wild type", "Wild type", "Mutant"),
levels = c("Wild type","Mutant"))
pal.mut <- c("gray50","maroon1")
}
y <- coxph(formula = Surv(OS.month, OS.event == "1") ~ gene, data = tmp)
z <- summary(y)
HR <- round(z$coefficients[2],2)
CI.lower <- round(z$conf.int[3],2)
CI.upper <- round(z$conf.int[4],2)
p.value <- ifelse(z$coefficients[5]<0.0001, z$coefficients[5], round(z$coefficients[5],4))
if(isTRUE(plot.surv)){
p <- survminer::ggsurvplot(
data = tmp, fit = survfit(Surv(OS.month, OS.event == "1") ~ gene, data = tmp),
pval = T, surv.median.line = "hv", size = 0.75,
legend = c(0.8, 0.3), legend.title = gene,
font.legend = list(size = 10, color = "black"),
legend.labs = paste0(names(table(tmp$gene)), ", n = ", table(tmp$gene)),
palette = pal.mut, risk.table = F, xlab = "", ylab = "", break.x.by = 12)
return(p)
} else if(!isTRUE(plot.surv) & gene == "TERT"){
HR.table <- data.frame(
Gene = c("TERT.promoter","TERT.UTR5"), Outcome = rep("OS",2),
MT.n = table(tmp$gene)[c("upstream","UTR5")],
WT.n = rep(table(tmp$gene)["Wild type"],2),
HR = round(z$coefficients[,2], 2),
CI.lower = round(z$conf.int[,3],2), CI.upper = round(z$conf.int[,4],2),
p.value = z$coefficients[,5])
} else {
HR.table <- data.frame(
Gene = gene, Outcome = "OS",
MT.n = table(tmp$gene)["Mutant"],
WT.n = table(tmp$gene)["Wild type"],
HR = HR, CI.lower = CI.lower, CI.upper = CI.upper, p.value = z$coefficients[5])
}
return(HR.table)
}
plot.gene.OS(gene = "ARID1A", plot.surv = F)
plot.gene.OS(gene = "TERT", plot.surv = F)
gene.panel <- c("ARID1A","PIK3CA","TERT","KRAS","PPP2R1A","TP53",
"ATM","KMT2D","AKT1","HIST1H3B","FAT1","NSD3")
OS.table <- lapply(gene.panel, function(x){
plot.gene.surv(gene=x, plot.surv = F)})
OS.table <- lapply(gene.panel, function(x){
plot.gene.OS(gene=x, plot.surv = F)})
colnames(OCCC.clinical)
gene.panel <- c("ARID1A","PIK3CA","TERT","KRAS","PPP2R1A","TP53","ATM",
"CHD4","PIK3R1","ARID1B","CREBBP","KMT2C","MUC16","NFE2L2","SPOP")
OS.table <- lapply(gene.panel, function(x){
plot.gene.OS(gene=x, plot.surv = F)})
OS.table <- do.call("rbind", OS.table)
plot.gene.OS(gene = "TERT", plot.surv = F)
plot.gene.OS(gene = "ARID1A", plot.surv = F)
plot.gene.OS <- function(gene, plot.surv = c(TRUE, FALSE)){
#browser()
tmp <- OCCC.clinical[,c("ID","OS.month","OS.event",gene)]
colnames(tmp)[4] <- "gene"
if(gene == "TERT"){
tmp$gene <- factor(tmp$gene, levels = c("Wild type","upstream","UTR5"))
pal.mut <- c("gray50","orange","pink")
} else{
tmp$gene <- factor(ifelse(tmp$gene == "Wild type", "Wild type", "Mutant"),
levels = c("Wild type","Mutant"))
pal.mut <- c("gray50","maroon1")
}
y <- coxph(formula = Surv(OS.month, OS.event == "1") ~ gene, data = tmp)
z <- summary(y)
HR <- round(z$coefficients[2],2)
CI.lower <- round(z$conf.int[3],2)
CI.upper <- round(z$conf.int[4],2)
p.value <- ifelse(z$coefficients[5]<0.0001, z$coefficients[5], round(z$coefficients[5],4))
if(isTRUE(plot.surv)){
p <- survminer::ggsurvplot(
data = tmp, fit = survfit(Surv(OS.month, OS.event == "1") ~ gene, data = tmp),
pval = T, surv.median.line = "hv", size = 0.75,
legend = c(0.8, 0.3), legend.title = gene,
font.legend = list(size = 10, color = "black"),
legend.labs = paste0(names(table(tmp$gene)), ", n = ", table(tmp$gene)),
palette = pal.mut, risk.table = F, xlab = "", ylab = "", break.x.by = 12)
return(p)
} else if(!isTRUE(plot.surv) & gene == "TERT"){
HR.table <- data.frame(
Gene = c("TERT.promoter","TERT.UTR5"), Outcome = rep("OS",2),
MT.n = as.numeric(table(tmp$gene)[c("upstream","UTR5")]),
WT.n = rep(table(tmp$gene)["Wild type"],2),
HR = round(z$coefficients[,2], 2),
CI.lower = round(z$conf.int[,3],2), CI.upper = round(z$conf.int[,4],2),
p.value = z$coefficients[,5])
} else {
HR.table <- data.frame(
Gene = gene, Outcome = "OS",
MT.n = table(tmp$gene)["Mutant"],
WT.n = table(tmp$gene)["Wild type"],
HR = HR, CI.lower = CI.lower, CI.upper = CI.upper, p.value = z$coefficients[5])
}
return(HR.table)
}
plot.gene.OS(gene = "TERT", plot.surv = F)
OS.table <- lapply(gene.panel, function(x){
plot.gene.OS(gene=x, plot.surv = F)})
OS.table <- do.call("rbind", OS.table)
View(OS.table)
OS.table$q.value <- p.adjust(OS.table$p.value, method = "BH")
rownames(OS.table) <- OS.table$Gene
write.csv(OS.table, "gene.mut.OSS.csv", row.names = F, quote = T)
OCCC.clinical$TERT
colnames(OCCC.clinical)
fit  <- coxph(Surv(OS.month, OS.event == "1") ~ Age + stage.group + TERT, data = OCCC.clinical)
fit0 <- coxph(Surv(OS.month, OS.event == "1") ~ 1, data = OCCC.clinical)
fitf <- stepAIC(fit0, scope = formula(fit), direction = "both", k=2)
## Cox hazard model uni/multivariate analysis
library(MASS)
fitf <- stepAIC(fit0, scope = formula(fit), direction = "both", k=2)
fitb <- stepAIC(fit, direction = "backward", k=2)
coxph(Surv(OS.month, OS.event == "1") ~ stage.group + TERT, data = OCCC.clinical) %>%
summary()
ggforest(model = coxph(Surv(OS.month, OS.event == "1") ~ stage.group + TERT, data = OCCC.clinical),
data = OCCC.clinical, fontsize = 1, main = "Forest plot of hazard ratio for OS")
